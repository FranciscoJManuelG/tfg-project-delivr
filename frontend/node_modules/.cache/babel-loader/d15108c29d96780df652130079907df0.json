{"ast":null,"code":"import _slicedToArray from \"/home/fran/software/tfg-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fran/software/tfg-project/frontend/src/modules/users/components/UpdateProfile.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport { Errors } from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nconst UpdateProfile = () => {\n  const user = useSelector(selectors.getUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const _useState = useState(user.firstName),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(user.lastName),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(user.email),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        backendErrors = _useState8[0],\n        setBackendErrors = _useState8[1];\n\n  let form;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (form.checkValidity()) {\n      dispatch(actions.updateProfile({\n        id: user.id,\n        firstName: firstName.trim(),\n        lastName: lastName.trim(),\n        email: email.trim()\n      }, () => history.push('/'), errors => setBackendErrors(errors)));\n    } else {\n      setBackendErrors(null);\n      form.classList.add('was-validated');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Errors, {\n    errors: backendErrors,\n    onClose: () => setBackendErrors(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card bg-light border-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.UpdateProfile.title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: node => form = node,\n    className: \"needs-validation\",\n    noValidate: true,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    className: \"form-control\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    autoFocus: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    className: \"form-control\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    className: \"form-control\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"offset-md-3 col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.buttons.save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))))))));\n};\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/home/fran/software/tfg-project/frontend/src/modules/users/components/UpdateProfile.js"],"names":["React","useState","useSelector","useDispatch","FormattedMessage","useHistory","Errors","actions","selectors","UpdateProfile","user","getUser","dispatch","history","firstName","setFirstName","lastName","setLastName","email","setEmail","backendErrors","setBackendErrors","form","handleSubmit","event","preventDefault","checkValidity","updateProfile","id","trim","push","errors","classList","add","node","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\nimport {useHistory} from 'react-router-dom';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nconst UpdateProfile = () => {\n\n    const user = useSelector(selectors.getUser);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [firstName, setFirstName] = useState(user.firstName);\n    const [lastName, setLastName] = useState(user.lastName);\n    const [email, setEmail]  = useState(user.email);\n    const [backendErrors, setBackendErrors] = useState(null);\n    let form;\n\n    const handleSubmit = event => {\n\n        event.preventDefault();\n\n        if (form.checkValidity()) {\n            \n            dispatch(actions.updateProfile(\n                {id: user.id,\n                firstName: firstName.trim(),\n                lastName: lastName.trim(),\n                email: email.trim()},\n                () => history.push('/'),\n                errors => setBackendErrors(errors)));\n\n        } else {\n\n            setBackendErrors(null);\n            form.classList.add('was-validated');\n\n        }\n\n    }\n\n    return (\n        <div>\n            <Errors errors={backendErrors} onClose={() => setBackendErrors(null)}/>\n            <div className=\"card bg-light border-dark\">\n                <h5 className=\"card-header\">\n                    <FormattedMessage id=\"project.users.UpdateProfile.title\"/>\n                </h5>\n                <div className=\"card-body\">\n                    <form ref={node => form = node} \n                        className=\"needs-validation\" noValidate onSubmit={e => handleSubmit(e)}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"firstName\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.firstName\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"text\" id=\"firstName\" className=\"form-control\"\n                                    value={firstName}\n                                    onChange={e => setFirstName(e.target.value)}\n                                    autoFocus\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"lastName\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.lastName\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"text\" id=\"lastName\" className=\"form-control\"\n                                    value={lastName}\n                                    onChange={e => setLastName(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"email\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.email\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"email\" id=\"email\" className=\"form-control\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.email'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <div className=\"offset-md-3 col-md-1\">\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    <FormattedMessage id=\"project.global.buttons.save\"/>\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}