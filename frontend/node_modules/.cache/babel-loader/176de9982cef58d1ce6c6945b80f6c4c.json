{"ast":null,"code":"import _slicedToArray from \"/home/fran/software/tfg-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fran/software/tfg-project/frontend/src/modules/users/components/SignUp.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport { Errors } from '../../common';\nimport * as actions from '../actions';\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        confirmPassword = _useState6[0],\n        setConfirmPassword = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        firstName = _useState8[0],\n        setFirstName = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        lastName = _useState10[0],\n        setLastName = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        email = _useState12[0],\n        setEmail = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        backendErrors = _useState14[0],\n        setBackendErrors = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        passwordsDoNotMatch = _useState16[0],\n        setPasswordsDoNotMatch = _useState16[1];\n\n  let form;\n  let confirmPasswordInput;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (form.checkValidity() && checkConfirmPassword()) {\n      dispatch(actions.signUp({\n        userName: userName.trim(),\n        password: password,\n        firstName: firstName.trim(),\n        lastName: lastName.trim(),\n        email: email.trim()\n      }, () => history.push('/'), errors => setBackendErrors(errors), () => {\n        history.push('/users/login');\n        dispatch(actions.logout());\n      }));\n    } else {\n      setBackendErrors(null);\n      form.classList.add('was-validated');\n    }\n  };\n\n  const checkConfirmPassword = () => {\n    if (password !== confirmPassword) {\n      confirmPasswordInput.setCustomValidity('error');\n      setPasswordsDoNotMatch(true);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleConfirmPasswordChange = value => {\n    confirmPasswordInput.setCustomValidity('');\n    setConfirmPassword(value);\n    setPasswordsDoNotMatch(false);\n  };\n\n  return React.createElement(\"div\", {\n    class: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    class: \"col-sm-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Errors, {\n    errors: backendErrors,\n    onClose: () => setBackendErrors(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    class: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/users/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.SignUpCompany.title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    class: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/users/login\",\n    class: \"float-right btn btn-outline-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Inicia sesi\\xF3n\"), React.createElement(\"h4\", {\n    class: \"card-title mb-4 mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Reg\\xEDstrate\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    ref: node => form = node,\n    class: \"needs-validation\",\n    noValidate: true,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"userName\",\n    class: \"form-control\",\n    placeholder: \"Introduce tu username\",\n    value: userName,\n    onChange: e => setUserName(e.target.value),\n    autoFocus: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    class: \"form-control\",\n    placeholder: \"Introduce tu contrase\\xF1a\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: node => confirmPasswordInput = node,\n    type: \"password\",\n    id: \"confirmPassword\",\n    className: \"form-control\",\n    placeholder: \"Repita la contrase\\xF1a\",\n    value: confirmPassword,\n    onChange: e => handleConfirmPasswordChange(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, passwordsDoNotMatch ? React.createElement(FormattedMessage, {\n    id: \"project.global.validator.passwordsDoNotMatch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    className: \"form-control\",\n    placeholder: \"Nombre completo\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    className: \"form-control\",\n    placeholder: \"Apellidos\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    className: \"form-control\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Reg\\xEDstrate\"))))))))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/fran/software/tfg-project/frontend/src/modules/users/components/SignUp.js"],"names":["React","useState","useDispatch","FormattedMessage","useHistory","Errors","actions","SignUp","dispatch","history","userName","setUserName","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","email","setEmail","backendErrors","setBackendErrors","passwordsDoNotMatch","setPasswordsDoNotMatch","form","confirmPasswordInput","handleSubmit","event","preventDefault","checkValidity","checkConfirmPassword","signUp","trim","push","errors","logout","classList","add","setCustomValidity","handleConfirmPasswordChange","value","node","e","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\nimport {useHistory} from 'react-router-dom';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\n\nconst SignUp = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail]  = useState('');\n    const [backendErrors, setBackendErrors] = useState(null);\n    const [passwordsDoNotMatch, setPasswordsDoNotMatch] = useState(false);\n    let form;\n    let confirmPasswordInput;\n\n    const handleSubmit = event => {\n\n        event.preventDefault();\n\n        if (form.checkValidity() && checkConfirmPassword()) {\n            \n            dispatch(actions.signUp(\n                {userName: userName.trim(),\n                password: password,\n                firstName: firstName.trim(),\n                lastName: lastName.trim(),\n                email: email.trim()},\n                () => history.push('/'),\n                errors => setBackendErrors(errors),\n                () => {\n                    history.push('/users/login');\n                    dispatch(actions.logout());\n                }\n            ));\n            \n\n        } else {\n\n            setBackendErrors(null);\n            form.classList.add('was-validated');\n\n        }\n\n    }\n\n    const checkConfirmPassword = () => {\n\n        if (password !== confirmPassword) {\n\n            confirmPasswordInput.setCustomValidity('error');\n            setPasswordsDoNotMatch(true);\n\n            return false;\n\n        } else {\n            return true;\n        }\n\n    }\n\n    const handleConfirmPasswordChange = value => {\n\n        confirmPasswordInput.setCustomValidity('');\n        setConfirmPassword(value);\n        setPasswordsDoNotMatch(false);\n    \n    }\n\n    return (\n        <div class=\"container\">\n            <div class=\"row justify-content-center\">\n                <aside class=\"col-sm-4\">\n                    <Errors errors={backendErrors} onClose={() => setBackendErrors(null)}/>\n                    <p class=\"text-center\">\n                        <Link to=\"/users/login\">\n                            <FormattedMessage id=\"project.users.SignUpCompany.title\"/>\n                        </Link>\n                    </p>\n                    <div class=\"card\">\n                        <article class=\"card-body\">\n                \t        <a href=\"/users/login\" class=\"float-right btn btn-outline-primary\">Inicia sesión</a>\n                \t        <h4 class=\"card-title mb-4 mt-1\">Regístrate</h4>\n                \t        <br/>\n                            <form ref={node => form = node} class=\"needs-validation\" \n                                noValidate onSubmit={e => handleSubmit(e)}>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" id=\"userName\" class=\"form-control\" \n                                        placeholder=\"Introduce tu username\"\n                                        value={userName}\n                                        onChange={e => setUserName(e.target.value)}\n                                        autoFocus\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div> \n                                <div class=\"form-group\">\n                                    <input type=\"password\" id=\"password\" class=\"form-control\" \n                                        placeholder=\"Introduce tu contraseña\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <input ref={node => confirmPasswordInput = node}\n                                        type=\"password\" id=\"confirmPassword\" className=\"form-control\"\n                                        placeholder=\"Repita la contraseña\"\n                                        value={confirmPassword}\n                                        onChange={e => handleConfirmPasswordChange(e.target.value)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        {passwordsDoNotMatch ?\n                                            <FormattedMessage id='project.global.validator.passwordsDoNotMatch'/> :\n                                            <FormattedMessage id='project.global.validator.required'/>}\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" id=\"firstName\" className=\"form-control\"\n                                        placeholder=\"Nombre completo\"\n                                        value={firstName}\n                                        onChange={e => setFirstName(e.target.value)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" id=\"lastName\" className=\"form-control\"\n                                        placeholder=\"Apellidos\"\n                                        value={lastName}\n                                        onChange={e => setLastName(e.target.value)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"email\" id=\"email\" className=\"form-control\"\n                                        placeholder=\"Email\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.email'/>\n                                    </div>\n                                </div>    \n                                <br/>\n                                <div class=\"row\">\n                                    <div class=\"col\">\n                                        <div class=\"form-group\">\n                                            <button type=\"submit\" class=\"btn btn-primary btn-block\">Regístrate</button>\n                                        </div> \n                                    </div>\n                                </div>                                                              \n                            </form>\n                        </article>\n                    </div>\n\t            </aside> \n            </div>\n        </div> \n    );\n\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}