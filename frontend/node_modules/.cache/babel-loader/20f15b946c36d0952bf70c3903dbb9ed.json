{"ast":null,"code":"import _slicedToArray from \"/home/fran/software/tfg-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fran/software/tfg-project/frontend/src/modules/users/components/ChangePassword.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport { Errors } from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nconst ChangePassword = () => {\n  const user = useSelector(selectors.getUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        oldPassword = _useState2[0],\n        setOldPassword = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newPassword = _useState4[0],\n        setNewPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        confirmNewPassword = _useState6[0],\n        setConfirmNewPassword = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        backendErrors = _useState8[0],\n        setBackendErrors = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        passwordsDoNotMatch = _useState10[0],\n        setPasswordsDoNotMatch = _useState10[1];\n\n  let form;\n  let confirmNewPasswordInput;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (form.checkValidity() && checkConfirmNewPassword()) {\n      dispatch(actions.changePassword(user.id, oldPassword, newPassword, () => history.push('/'), errors => setBackendErrors(errors)));\n    } else {\n      setBackendErrors(null);\n      form.classList.add('was-validated');\n    }\n  };\n\n  const checkConfirmNewPassword = () => {\n    if (newPassword !== confirmNewPassword) {\n      confirmNewPasswordInput.setCustomValidity('error');\n      setPasswordsDoNotMatch(true);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleConfirmNewPasswordChange = event => {\n    confirmNewPasswordInput.setCustomValidity('');\n    setConfirmNewPassword(event.target.value);\n    setPasswordsDoNotMatch(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Errors, {\n    errors: backendErrors,\n    onClose: () => setBackendErrors(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card bg-light border-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.ChangePassword.title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: node => form = node,\n    className: \"needs-validation\",\n    noValidate: true,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"oldPassword\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.ChangePassword.fields.oldPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    id: \"oldPassword\",\n    className: \"form-control\",\n    value: oldPassword,\n    onChange: e => setOldPassword(e.target.value),\n    autoFocus: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"newPassword\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.ChangePassword.fields.newPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    id: \"newPassword\",\n    className: \"form-control\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"confirmNewPassword\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.ChangePassword.fields.confirmNewPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: node => confirmNewPasswordInput = node,\n    type: \"password\",\n    id: \"confirmNewPassword\",\n    className: \"form-control\",\n    value: confirmNewPassword,\n    onChange: e => handleConfirmNewPasswordChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, passwordsDoNotMatch ? React.createElement(FormattedMessage, {\n    id: \"project.global.validator.passwordsDoNotMatch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"offset-md-3 col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.buttons.save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))))))));\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/fran/software/tfg-project/frontend/src/modules/users/components/ChangePassword.js"],"names":["React","useState","useSelector","useDispatch","FormattedMessage","useHistory","Errors","actions","selectors","ChangePassword","user","getUser","dispatch","history","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","backendErrors","setBackendErrors","passwordsDoNotMatch","setPasswordsDoNotMatch","form","confirmNewPasswordInput","handleSubmit","event","preventDefault","checkValidity","checkConfirmNewPassword","changePassword","id","push","errors","classList","add","setCustomValidity","handleConfirmNewPasswordChange","target","value","node","e"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\nimport {useHistory} from 'react-router-dom';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nconst ChangePassword = () => {\n\n    const user = useSelector(selectors.getUser);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\n    const [backendErrors, setBackendErrors] = useState(null);\n    const [passwordsDoNotMatch, setPasswordsDoNotMatch] = useState(false);\n    let form;\n    let confirmNewPasswordInput;\n\n    const handleSubmit = event => {\n\n        event.preventDefault();\n\n        if (form.checkValidity() && checkConfirmNewPassword()) {\n\n            dispatch(actions.changePassword(user.id, oldPassword, newPassword,\n                () => history.push('/'),\n                errors => setBackendErrors(errors)));\n\n        } else {\n\n            setBackendErrors(null);\n            form.classList.add('was-validated');\n            \n        }\n\n    }\n\n    const checkConfirmNewPassword = () => {\n\n        if (newPassword !== confirmNewPassword) {\n\n            confirmNewPasswordInput.setCustomValidity('error');\n            setPasswordsDoNotMatch(true);\n\n            return false;\n\n        } else {\n            return true;\n        }\n\n    }\n\n    const handleConfirmNewPasswordChange = event => {\n\n        confirmNewPasswordInput.setCustomValidity('');\n        setConfirmNewPassword(event.target.value);\n        setPasswordsDoNotMatch(false);\n\n    }\n\n    return (\n        <div>\n            <Errors errors={backendErrors} onClose={() => setBackendErrors(null)}/>\n            <div className=\"card bg-light border-dark\">\n                <h5 className=\"card-header\">\n                    <FormattedMessage id=\"project.users.ChangePassword.title\"/>\n                </h5>\n                <div className=\"card-body\">\n                    <form ref={node => form = node} \n                        className=\"needs-validation\" noValidate onSubmit={e => handleSubmit(e)}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"oldPassword\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.users.ChangePassword.fields.oldPassword\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"password\" id=\"oldPassword\" className=\"form-control\"\n                                    value={oldPassword}\n                                    onChange={e => setOldPassword(e.target.value)}\n                                    autoFocus\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"newPassword\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.users.ChangePassword.fields.newPassword\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"password\" id=\"newPassword\" className=\"form-control\"\n                                    value={newPassword}\n                                    onChange={e => setNewPassword(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"confirmNewPassword\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.users.ChangePassword.fields.confirmNewPassword\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input ref={node => confirmNewPasswordInput = node}\n                                    type=\"password\" id=\"confirmNewPassword\" className=\"form-control\"\n                                    value={confirmNewPassword}\n                                    onChange={e => handleConfirmNewPasswordChange(e)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    {passwordsDoNotMatch ?\n                                        <FormattedMessage id='project.global.validator.passwordsDoNotMatch'/> :\n                                        <FormattedMessage id='project.global.validator.required'/>}\n                                    \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <div className=\"offset-md-3 col-md-1\">\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    <FormattedMessage id=\"project.global.buttons.save\"/>\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}