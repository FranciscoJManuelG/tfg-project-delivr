{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as actionTypes from './actionTypes';\nconst initialState = {\n  error: null,\n  loading: false\n};\n\nconst error = (state = initialState.error, action) => {\n  switch (action.type) {\n    case actionTypes.ERROR:\n      return action.error;\n\n    default:\n      return state;\n  }\n};\n\nconst loading = (state = initialState.loading, action) => {\n  switch (action.type) {\n    case actionTypes.LOADING:\n      return true;\n\n    case actionTypes.LOADED:\n      return false;\n\n    case actionTypes.ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst reducer = combineReducers({\n  error,\n  loading\n});\nexport default reducer;","map":{"version":3,"sources":["/home/fran/software/tfg-project/frontend/src/modules/app/reducer.js"],"names":["combineReducers","actionTypes","initialState","error","loading","state","action","type","ERROR","LOADING","LOADED","reducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;;AAKA,MAAMD,KAAK,GAAG,CAACE,KAAK,GAAGH,YAAY,CAACC,KAAtB,EAA6BG,MAA7B,KAAwC;AAElD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,WAAW,CAACO,KAAjB;AACI,aAAOF,MAAM,CAACH,KAAd;;AAEJ;AACI,aAAOE,KAAP;AANR;AAUH,CAZD;;AAcA,MAAMD,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAY,CAACE,OAAtB,EAA+BE,MAA/B,KAA0C;AAEtD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,WAAW,CAACQ,OAAjB;AACI,aAAO,IAAP;;AAEJ,SAAKR,WAAW,CAACS,MAAjB;AACI,aAAO,KAAP;;AAEJ,SAAKT,WAAW,CAACO,KAAjB;AACI,aAAO,KAAP;;AAEJ;AACI,aAAOH,KAAP;AAZR;AAgBH,CAlBD;;AAoBA,MAAMM,OAAO,GAAGX,eAAe,CAAC;AAC5BG,EAAAA,KAD4B;AAE5BC,EAAAA;AAF4B,CAAD,CAA/B;AAKA,eAAeO,OAAf","sourcesContent":["import {combineReducers} from 'redux';\n\nimport * as actionTypes from './actionTypes';\n\nconst initialState = {\n    error: null,\n    loading: false,\n};\n\nconst error = (state = initialState.error, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.ERROR:\n            return action.error;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst loading = (state = initialState.loading, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.LOADING:\n            return true;\n\n        case actionTypes.LOADED:\n            return false;\n\n        case actionTypes.ERROR:\n            return false;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst reducer = combineReducers({\n    error,\n    loading\n});\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}