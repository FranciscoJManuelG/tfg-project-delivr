{"ast":null,"code":"import _slicedToArray from \"/home/fran/software/tfg-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fran/software/tfg-project/frontend/src/modules/users/components/SignUp.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport { Errors } from '../../common';\nimport * as actions from '../actions';\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        confirmPassword = _useState6[0],\n        setConfirmPassword = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        firstName = _useState8[0],\n        setFirstName = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        lastName = _useState10[0],\n        setLastName = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        email = _useState12[0],\n        setEmail = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        backendErrors = _useState14[0],\n        setBackendErrors = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        passwordsDoNotMatch = _useState16[0],\n        setPasswordsDoNotMatch = _useState16[1];\n\n  let form;\n  let confirmPasswordInput;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (form.checkValidity() && checkConfirmPassword()) {\n      dispatch(actions.signUp({\n        userName: userName.trim(),\n        password: password,\n        firstName: firstName.trim(),\n        lastName: lastName.trim(),\n        email: email.trim()\n      }, () => history.push('/'), errors => setBackendErrors(errors), () => {\n        history.push('/users/login');\n        dispatch(actions.logout());\n      }));\n    } else {\n      setBackendErrors(null);\n      form.classList.add('was-validated');\n    }\n  };\n\n  const checkConfirmPassword = () => {\n    if (password !== confirmPassword) {\n      confirmPasswordInput.setCustomValidity('error');\n      setPasswordsDoNotMatch(true);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleConfirmPasswordChange = value => {\n    confirmPasswordInput.setCustomValidity('');\n    setConfirmPassword(value);\n    setPasswordsDoNotMatch(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Errors, {\n    errors: backendErrors,\n    onClose: () => setBackendErrors(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card bg-light border-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.SignUp.title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: node => form = node,\n    className: \"needs-validation\",\n    noValidate: true,\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"userName\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.userName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"userName\",\n    className: \"form-control\",\n    value: userName,\n    onChange: e => setUserName(e.target.value),\n    autoFocus: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    className: \"form-control\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.SignUp.fields.confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: node => confirmPasswordInput = node,\n    type: \"password\",\n    id: \"confirmPassword\",\n    className: \"form-control\",\n    value: confirmPassword,\n    onChange: e => handleConfirmPasswordChange(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, passwordsDoNotMatch ? React.createElement(FormattedMessage, {\n    id: \"project.global.validator.passwordsDoNotMatch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }) : React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    className: \"form-control\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    className: \"form-control\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"col-md-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.fields.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    className: \"form-control\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.global.validator.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"offset-md-3 col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"project.users.SignUp.title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }))))))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/fran/software/tfg-project/frontend/src/modules/users/components/SignUp.js"],"names":["React","useState","useDispatch","FormattedMessage","useHistory","Errors","actions","SignUp","dispatch","history","userName","setUserName","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","email","setEmail","backendErrors","setBackendErrors","passwordsDoNotMatch","setPasswordsDoNotMatch","form","confirmPasswordInput","handleSubmit","event","preventDefault","checkValidity","checkConfirmPassword","signUp","trim","push","errors","logout","classList","add","setCustomValidity","handleConfirmPasswordChange","value","node","e","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\nimport {useHistory} from 'react-router-dom';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\n\nconst SignUp = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail]  = useState('');\n    const [backendErrors, setBackendErrors] = useState(null);\n    const [passwordsDoNotMatch, setPasswordsDoNotMatch] = useState(false);\n    let form;\n    let confirmPasswordInput;\n\n    const handleSubmit = event => {\n\n        event.preventDefault();\n\n        if (form.checkValidity() && checkConfirmPassword()) {\n            \n            dispatch(actions.signUp(\n                {userName: userName.trim(),\n                password: password,\n                firstName: firstName.trim(),\n                lastName: lastName.trim(),\n                email: email.trim()},\n                () => history.push('/'),\n                errors => setBackendErrors(errors),\n                () => {\n                    history.push('/users/login');\n                    dispatch(actions.logout());\n                }\n            ));\n            \n\n        } else {\n\n            setBackendErrors(null);\n            form.classList.add('was-validated');\n\n        }\n\n    }\n\n    const checkConfirmPassword = () => {\n\n        if (password !== confirmPassword) {\n\n            confirmPasswordInput.setCustomValidity('error');\n            setPasswordsDoNotMatch(true);\n\n            return false;\n\n        } else {\n            return true;\n        }\n\n    }\n\n    const handleConfirmPasswordChange = value => {\n\n        confirmPasswordInput.setCustomValidity('');\n        setConfirmPassword(value);\n        setPasswordsDoNotMatch(false);\n    \n    }\n\n    return (\n        <div>\n            <Errors errors={backendErrors} onClose={() => setBackendErrors(null)}/>\n            <div className=\"card bg-light border-dark\">\n                <h5 className=\"card-header\">\n                    <FormattedMessage id=\"project.users.SignUp.title\"/>\n                </h5>\n                <div className=\"card-body\">\n                    <form ref={node => form = node}\n                        className=\"needs-validation\" noValidate \n                        onSubmit={e => handleSubmit(e)}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"userName\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.userName\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"text\" id=\"userName\" className=\"form-control\"\n                                    value={userName}\n                                    onChange={e => setUserName(e.target.value)}\n                                    autoFocus\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"password\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.password\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"password\" id=\"password\" className=\"form-control\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"confirmPassword\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.users.SignUp.fields.confirmPassword\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input ref={node => confirmPasswordInput = node}\n                                    type=\"password\" id=\"confirmPassword\" className=\"form-control\"\n                                    value={confirmPassword}\n                                    onChange={e => handleConfirmPasswordChange(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    {passwordsDoNotMatch ?\n                                        <FormattedMessage id='project.global.validator.passwordsDoNotMatch'/> :\n                                        <FormattedMessage id='project.global.validator.required'/>}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"firstName\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.firstName\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"text\" id=\"firstName\" className=\"form-control\"\n                                    value={firstName}\n                                    onChange={e => setFirstName(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"lastName\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.lastName\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"text\" id=\"lastName\" className=\"form-control\"\n                                    value={lastName}\n                                    onChange={e => setLastName(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.required'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"email\" className=\"col-md-3 col-form-label\">\n                                <FormattedMessage id=\"project.global.fields.email\"/>\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"email\" id=\"email\" className=\"form-control\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    required/>\n                                <div className=\"invalid-feedback\">\n                                    <FormattedMessage id='project.global.validator.email'/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <div className=\"offset-md-3 col-md-2\">\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    <FormattedMessage id=\"project.users.SignUp.title\"/>\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}